//! <https://leetcode.com/problems/count-palindromic-subsequences/>

struct Solution {}

/// time-complexity : O(n)
/// space-complexity : O(n)
impl Solution {
    pub fn count_palindromes(s: String) -> i32 {
        let mut total: i64 = 0;
        let n = s.len();
        if n < 5 {
            return 0;
        }

        let mut digit_count = [0; 10];
        let mut prefix_counts = vec![[[0; 10]; 10]; n];
        for (index, c) in s.bytes().enumerate() {
            let c = c - b'0';
            if index > 0 {
                for (i, dc) in digit_count.iter().enumerate() {
                    for j in 0usize..10 {
                        prefix_counts[index][i][j] = prefix_counts[index - 1][i][j];
                        if j == c.into() {
                            prefix_counts[index][i][j] += dc;
                        }
                    }
                }
            }
            digit_count[c as usize] += 1;
        }

        digit_count = [0; 10];
        let mut suffix_counts = vec![[[0; 10]; 10]; n];
        for (index, c) in s.bytes().enumerate().rev() {
            let c = c - b'0';
            if index < n - 1 {
                for (i, dc) in digit_count.iter().enumerate() {
                    for j in 0usize..10 {
                        suffix_counts[index][i][j] = suffix_counts[index + 1][i][j];
                        if j == c.into() {
                            suffix_counts[index][i][j] += dc;
                        }
                    }
                }
            }
            digit_count[c as usize] += 1;
        }

        for index in 2..n - 2 {
            for i in 0..10 {
                for j in 0..10 {
                    total = (total
                        + prefix_counts[index - 1][i][j] * suffix_counts[index + 1][i][j])
                        % 1000000007;
                }
            }
        }

        total as i32
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_cases() {
        assert_eq!(Solution::count_palindromes("103301".into()), 2);
        assert_eq!(Solution::count_palindromes("0000000".into()), 21);
        assert_eq!(Solution::count_palindromes("9999900000".into()), 2);
        assert_eq!(Solution::count_palindromes("3".into()), 0);
        assert_eq!(Solution::count_palindromesinto()), 379753341);
    }
}
